403410006 龔逸中 * Assembly Language * HW-6
  
0. 題目：  
“README.txt” file describes the features in your program and how to compile and run your program

1. 程式內容：   
此次程式包含兩個部分，第一個檔案 hw6_test.s 為傳參數，第二個檔案 numsort.s 則是存放執行排序的 function，兩個檔案編譯為 hw6.exe ，參數有二，其一 r0 存放於記憶體位置 100 也就是 0x64 的位置，主要放置欲排列的陣列內容，其二 r1 存放於記憶體位置 200 也就是 0xc8 的位置，放置此陣列的大小（陣列數*4，e.g. 3 個元素，大小則為 3*4 = 12）。
  
參數給予後程式會由 BL 跳轉至 NumSort function，其中此排序函式採用 bubble sort 排序法，亦即陣列元素與下一元素互相比較，若該元素大於下一元素時，互相交換，重複此行為直到由小到大排序完成。  
  
比較特別的是：此次作業要求原陣列必須不能變動，所以在排序前，我們先將 [r0] 內容完整複製一份至 [r8] （也就是作業要求排序完後之結果擺放位置），然後對 [r8] 進行排序。

2. 程式執行環境：  
Ubuntu 15.10 x64

3. 編譯及執行程式：  
~$ ./foo/bin/arm-elf-gcc -g -O0 hw6_test.s numsort.s -o hw6.exe #編譯程式
~$ ./foo/bin/arm-elf-insight hw6.exe #利用 insight 執行並偵錯程式
** insight 執行時，target 設定為 SIMULATOR。
~$ ./foo/bin/arm-elf-run hw6.exe #這樣也是可以執行程式啦，但是會哭哭看不出來你到底執行了什麼。 
 
4. 執行結果（以下皆為十進位表示）（以 hw6.exe 為例）：
r0 = 0x64 //陣列內容放置於 0x64
r1 = 0xc8 //陣列大小放置於 0xc8
======================================================
[r0]+0 = 1 //陣列 第 1 個元素 1
[r0]+4 = 4 //陣列 第 2 個元素 4
[r0]+8 = 3 //陣列 第 3 個元素 3
[r0]+c = 2 //陣列 第 4 個元素 2
[r1] = 4*4 = 16 //共四個元素，大小為 16
======================================================
排序後，結果放於 [r8] ，[r0] 內容不變。
[r0]+0 = 1 //陣列 第 1 個元素 1
[r0]+4 = 4 //陣列 第 2 個元素 4
[r0]+8 = 3 //陣列 第 3 個元素 3
[r0]+c = 2 //陣列 第 4 個元素 2

[r8]+0 = 1 //陣列 第 1 個元素 1
[r8]+4 = 2 //陣列 第 2 個元素 2
[r8]+8 = 3 //陣列 第 3 個元素 3
[r8]+c = 4 //陣列 第 4 個元素 4

//END THE PROGRAM

5. 請助教笑納 ^^